[_ready]

body="func _ready() -> void:
	pass"
additional_info="检测操作权限"
other_info="项目专用"

[_enter_tree]

body="func _enter_tree() -> void:
	pass"
additional_info=""

[_exit_tree]

body="func _exit_tree() -> void:
	pass"
additional_info=""

[_physics_process]

body="func _physics_process(delta : float) -> void:
	pass"
additional_info=" (delta : float)"

[_process]

body="func _process(delta : float) -> void:
	pass"
additional_info=" (delta : float)"

[_input]

body="func _input(event : InputEvent) -> void:
	pass"
additional_info=" (event : InputEvent)"

[_unhandled_input]

body="func _unhandled_input(event : InputEvent) -> void:
	pass"
additional_info=" (event : InputEvent)"

[_unhandled_key_input]

body="func _unhandled_key_input(event : InputEventKey) -> void:
	pass"
additional_info=" (event : InputEventKey)"

[_gui_input]

body="func _gui_input(event : InputEvent) -> void:
	pass"
additional_info=" (event : InputEvent)"

[_draw]

body="func _draw() -> void:
	pass"
additional_info=""

[idle]

body="yield(get_tree(),\"idle_frame\")"
additional_info="不阻塞等待一帧"
other_info=""

[client_check_permission]

body="if not ClientObj.has_permission(Const.Permission.[@1]):
	MessagePopup.show_message(\"没有操作权限\")
	return"

[c_request_f]

body="static func request_[@1]_async() ->[@2]:
	ClientObj.socket.put_utf8_string(Protocol.RequestData.get_json_string(Protocol.RequestData.Code.[@3]))
	var result = yield(wait_respond_async(),\"completed\")
	if result is Protocol.[@4]
	return [@%]"
additional_info="无参数请求"
other_info="项目专用"
